<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>weapp-tailwindcss 把tailwindcss带给小程序开发者们 Blog</title>
        <link>https://tw.icebreaker.top/weapp-tailwindcss/blog</link>
        <description>weapp-tailwindcss 把tailwindcss带给小程序开发者们 Blog</description>
        <lastBuildDate>Wed, 05 Mar 2025 17:26:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-cn</language>
        <item>
            <title><![CDATA[2025/3/v4-release]]></title>
            <link>https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release</link>
            <guid>https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release</guid>
            <pubDate>Wed, 05 Mar 2025 17:26:06 GMT</pubDate>
            <description><![CDATA[4.0 release]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" src="https://cdn.jsdelivr.net/gh/sonofmagic/static/mbpv4-release.png" alt="4.0 release" class="img_VS8g"></p>
<h2 class="anchor anchorWithStickyNavbar_dDfy" id="总结"><strong>总结</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>经历了一番自虐式开发后，<code>weapp-tailwindcss</code> <strong>v4.0</strong> 终于发布了！</p>
<p>在清理了一些自己当初写的屎山代码后，我终于实现了心心念念的两个大功能：</p>
<ol>
<li><strong>支持 <code>tailwindcss@4.x</code> 版本</strong></li>
<li><strong>支持 <code>tailwind-merge</code></strong></li>
</ol>
<blockquote>
<p>因为 <code>tailwindcss@4</code> 直接变成了一个样式预处理器，定位上类似 <code>Sass</code> / <code>Less</code>，所以相关的改动还是挺大的。目前 <code>weapp-tailwindcss@4</code> 版本也同时兼容 <code>tailwindcss 4+3+2(jit)</code> 三个版本了。</p>
</blockquote>
<p>想快速上手集成？欢迎访问 <a href="https://tw.icebreaker.top/" target="_blank" rel="noopener noreferrer">weapp-tailwindcss 官网</a>！
如果你想进一步了解细节，下面有个示例，看看就懂了。</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_dDfy" id="uni-app-快速集成示例"><strong>uni-app 快速集成示例</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#uni-app-%E5%BF%AB%E9%80%9F%E9%9B%86%E6%88%90%E7%A4%BA%E4%BE%8B" class="hash-link" aria-label="uni-app-快速集成示例的直接链接" title="uni-app-快速集成示例的直接链接">​</a></h2>
<p>这里我们以 <strong><code>uni-app</code>（Vue3 + Vite）</strong> 为例。</p>
<h3 class="anchor anchorWithStickyNavbar_dDfy" id="1-安装依赖"><strong>1. 安装依赖</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#1-%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96" class="hash-link" aria-label="1-安装依赖的直接链接" title="1-安装依赖的直接链接">​</a></h3>
<div class="tabs-container tabList_x4Gn"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_Yge3 tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_Yge3">pnpm</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_b69A"><div class="language-bash codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-bash codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token function" style="color:rgb(220, 220, 170)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(156, 220, 254)">-D</span><span class="token plain"> tailwindcss @tailwindcss/vite weapp-tailwindcss</span><br></span></code></pre></div></div></div><div role="tabpanel" class="tabItem_b69A" hidden=""><div class="language-bash codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-bash codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token function" style="color:rgb(220, 220, 170)">pnpm</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">add</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(156, 220, 254)">-D</span><span class="token plain"> tailwindcss @tailwindcss/vite weapp-tailwindcss</span><br></span></code></pre></div></div></div></div></div>
<p>然后，把下面这段脚本加入 <code>package.json</code> 的 <code>scripts</code> 字段里：</p>
<div class="language-json codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockTitle_G2XU">package.json</div><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-json codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token property" style="color:#9CDCFE">"scripts"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#D4D4D4"><span class="token plain">    </span><span class="token property" style="color:#9CDCFE">"postinstall"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"weapp-tw patch"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre></div></div>
<blockquote>
<p>这个补丁是为了让 <code>tailwindcss@4</code> 认识 <code>rpx</code> 单位，否则它会以为 <code>rpx</code> 是个颜色单位，导致 <code>text-[40rpx]</code> 这样的样式翻车。</p>
</blockquote>
<hr>
<h3 class="anchor anchorWithStickyNavbar_dDfy" id="2-配置-viteconfigts"><strong>2. 配置 <code>vite.config.ts</code></strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#2-%E9%85%8D%E7%BD%AE-viteconfigts" class="hash-link" aria-label="2-配置-viteconfigts的直接链接" title="2-配置-viteconfigts的直接链接">​</a></h3>
<div class="language-ts codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockTitle_G2XU">vite.config.ts</div><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-ts codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token keyword" style="color:#C586C0">import</span><span class="token plain"> uni </span><span class="token keyword" style="color:#C586C0">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'@dcloudio/vite-plugin-uni'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token keyword" style="color:#C586C0">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token keyword" style="color:#C586C0">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'vite'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token keyword" style="color:#C586C0">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> UnifiedViteWeappTailwindcssPlugin </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token keyword" style="color:#C586C0">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'weapp-tailwindcss/vite'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token keyword" style="color:#C586C0">export</span><span class="token plain"> </span><span class="token keyword" style="color:#C586C0">default</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">defineConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:#C586C0">async</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)">// 这里必须这样引用，因为 uni 只提供 cjs 版本，而 @tailwindcss/vite 只提供 esm 版本</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token keyword" style="color:#C586C0">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> </span><span class="token keyword" style="color:#C586C0">default</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> tailwindcss </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token keyword" style="color:#C586C0">await</span><span class="token plain"> </span><span class="token keyword" style="color:#C586C0">import</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'@tailwindcss/vite'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token keyword" style="color:#C586C0">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">    plugins</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">      </span><span class="token function" style="color:rgb(220, 220, 170)">uni</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">      </span><span class="token function" style="color:rgb(220, 220, 170)">tailwindcss</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">      </span><span class="token function" style="color:rgb(220, 220, 170)">UnifiedViteWeappTailwindcssPlugin</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> rem2rpx</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean" style="color:#569CD6">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_dDfy" id="3-添加样式"><strong>3. 添加样式</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#3-%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F" class="hash-link" aria-label="3-添加样式的直接链接" title="3-添加样式的直接链接">​</a></h3>
<p>在项目目录下创建 <code>main.css</code>，然后添加以下内容：</p>
<div class="language-css codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockTitle_G2XU">main.css</div><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-css codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token atrule rule" style="color:#C586C0">@import</span><span class="token atrule" style="color:#569CD6"> </span><span class="token atrule string" style="color:rgb(206, 145, 120)">'weapp-tailwindcss'</span><span class="token atrule punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre></div></div>
<p>接着在 <code>main.js</code> 里引用这个文件作为全局样式，然后直接运行：</p>
<div class="tabs-container tabList_x4Gn"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_Yge3 tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_Yge3">pnpm</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_b69A"><div class="language-bash codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-bash codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token function" style="color:rgb(220, 220, 170)">npm</span><span class="token plain"> run dev:mp-weixin</span><br></span></code></pre></div></div></div><div role="tabpanel" class="tabItem_b69A" hidden=""><div class="language-bash codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-bash codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token function" style="color:rgb(220, 220, 170)">pnpm</span><span class="token plain"> run dev:mp-weixin</span><br></span></code></pre></div></div></div></div></div>
<p>在微信开发者工具中导入这个项目，在项目中使用 <code>tailwindcss</code> 原子类，即可看到效果。</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_dDfy" id="遇到的问题以及解决方案"><strong>遇到的问题以及解决方案</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="遇到的问题以及解决方案的直接链接" title="遇到的问题以及解决方案的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_dDfy" id="1-tailwindcss4-的样式兼容性问题"><strong>1. <code>tailwindcss@4</code> 的样式兼容性问题</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#1-tailwindcss4-%E7%9A%84%E6%A0%B7%E5%BC%8F%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98" class="hash-link" aria-label="1-tailwindcss4-的样式兼容性问题的直接链接" title="1-tailwindcss4-的样式兼容性问题的直接链接">​</a></h3>
<p><code>tailwindcss@4</code> 生成的样式广泛使用了 <code>@layer</code>、<code>color-mix</code>、<code>oklch</code> 等新特性，现代浏览器兼容性都不咋地，更别说小程序了。</p>
<p>所以无论是 H5 还是小程序，都需要 <code>postcss-preset-env</code> 来降级这些样式的生成结果。降级的程度取决于你的 <code>browserslist</code> 配置。</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_dDfy" id="2-tailwind-merge-样式合并问题"><strong>2. <code>tailwind-merge</code> 样式合并问题</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#2-tailwind-merge-%E6%A0%B7%E5%BC%8F%E5%90%88%E5%B9%B6%E9%97%AE%E9%A2%98" class="hash-link" aria-label="2-tailwind-merge-样式合并问题的直接链接" title="2-tailwind-merge-样式合并问题的直接链接">​</a></h3>
<p><code>tailwind-merge</code> 是一个 <code>tailwindcss</code> 运行时样式合并工具，它能自动合并重复的样式。不过，小程序端用 <code>tailwind-merge</code> 有点挑战，因为：</p>
<ul>
<li><code>weapp-tailwindcss</code> <strong>在编译时</strong> 对 <code>tailwindcss</code> 样式做转义。</li>
<li><code>tailwind-merge</code> <strong>在运行时</strong> 处理样式合并。</li>
</ul>
<p>这导致 <code>tailwind-merge</code> 处理已转义的 <code>class</code> 时，误以为它们是普通 <code>class</code>，而不是 <code>tailwindcss</code> 的原子类。</p>
<h3 class="anchor anchorWithStickyNavbar_dDfy" id="解决方案编译时感应--运行时合并转义"><strong>解决方案：编译时感应 + 运行时合并转义</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E7%BC%96%E8%AF%91%E6%97%B6%E6%84%9F%E5%BA%94--%E8%BF%90%E8%A1%8C%E6%97%B6%E5%90%88%E5%B9%B6%E8%BD%AC%E4%B9%89" class="hash-link" aria-label="解决方案编译时感应--运行时合并转义的直接链接" title="解决方案编译时感应--运行时合并转义的直接链接">​</a></h3>
<p>我研究了一下 <code>tailwind-merge</code> 的源码，尝试写一个 <code>plugin</code> 来解决这个问题，结果发现路走不通，因为：</p>
<ul>
<li><code>tailwind-merge</code> 内部有一些硬编码规则，比如 <code>!</code> 代表 <code>!important</code>，无法通过 <code>plugin</code> 自定义。</li>
</ul>
<p>于是，我换了个思路，<strong>采用编译时感应、忽略转义，运行时合并转义的方式</strong> 解决了这个问题，这就是 <strong><code>@weapp-tailwindcss/merge</code></strong> 诞生的原因。</p>
<h4 class="anchor anchorWithStickyNavbar_dDfy" id="编译时感应的原理"><strong>编译时感应的原理</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E7%BC%96%E8%AF%91%E6%97%B6%E6%84%9F%E5%BA%94%E7%9A%84%E5%8E%9F%E7%90%86" class="hash-link" aria-label="编译时感应的原理的直接链接" title="编译时感应的原理的直接链接">​</a></h4>
<p>我利用 <code>babel</code> 的 <code>scope</code>（作用域） 和 <code>binding</code>（绑定） 增强了识别能力</p>
<p><code>scope</code> 简而言之就是 <code>js</code> 基础里的大括号, <code>binding</code> 就是一个变量真正的绑定</p>
<p>比如：</p>
<div class="language-js codeBlockContainer_BC4X theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#212121"><div class="codeBlockContent_OU_7"><pre tabindex="0" class="prism-code language-js codeBlock_U7f2 thin-scrollbar" style="color:#D4D4D4;background-color:#212121"><code class="codeBlockLines_dmYE"><span class="token-line" style="color:#D4D4D4"><span class="token keyword" style="color:#C586C0">const</span><span class="token plain"> b </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'after:xx'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token keyword" style="color:#C586C0">const</span><span class="token plain"> a </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(206, 145, 120)">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(212, 212, 212)">${</span><span class="token template-string interpolation">b</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token template-string string" style="color:rgb(206, 145, 120)"> text-[#123456]</span><span class="token template-string template-punctuation string" style="color:rgb(206, 145, 120)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token function" style="color:rgb(220, 220, 170)">cn</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">a</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'xx'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'yy'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<p>这段代码的作用域是全局，然后 <code>cn</code> 中 <code>a</code> 的绑定是一个 <code>VariableDeclaration</code> 它的 <code>init</code> 中，又引用了 <code>b</code> ，它的绑定也是一个 <code>VariableDeclaration</code> 初始化是一个 <code>StringLiteral</code></p>
<p>于是，在编译时，我们可以从 <code>cn</code> 递归向上找到 <code>a</code> 和 <code>b</code>，识别出完整的样式链。</p>
<p>当然，另一种方式是 <strong>自上而下查找</strong>，通过 <code>import</code> 语句分析模块依赖关系，甚至可以利用打包工具的模块分析图进行静态分析。</p>
<p>当然这块的实现被用在了 <strong><code>@weapp-tailwindcss/merge</code></strong> 中，详见 <a href="https://tw.icebreaker.top/docs/community/merge" target="_blank" rel="noopener noreferrer">tailwind-merge 快速开始</a>。</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_dDfy" id="开发心得"><strong>开发心得</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E5%BC%80%E5%8F%91%E5%BF%83%E5%BE%97" class="hash-link" aria-label="开发心得的直接链接" title="开发心得的直接链接">​</a></h2>
<p>在开发的时候，一定要把可能影响结果的方式，拆成多多阶段运行，比如在修改 <code>js ast</code> 的时候，不应该一边 <code>traverse</code> ，一边再用 <code>MagicString</code> 去修改，而是应该把需要修改的地方，先全部收集出来，然后在一个阶段统一去修改。</p>
<p>另外鉴别一个 <code>ast</code> 工具的成熟度，也应该考虑一下，作用域和绑定的关系，能否被解析出来。比如我们都知道 <code>js</code> 里面大概有 <code>5</code> 种行为会产生作用域:</p>
<ul>
<li><strong>Program</strong>：全局作用域，整个文件的顶层作用域。</li>
<li><strong>FunctionDeclaration / FunctionExpression / ArrowFunctionExpression</strong>：函数作用域（包括箭头函数）。</li>
<li><strong>BlockStatement</strong>：块级作用域（由 <code>{}</code> 包裹，例如 if、for、while 中的块，在 ES6 中支持 let 和 const）。</li>
<li><strong>ClassDeclaration / ClassExpression</strong>：类作用域（类的主体和方法会引入作用域）。</li>
<li><strong>CatchClause</strong>：try-catch 中 catch 块的作用域。</li>
</ul>
<p>而绑定本身也是通过 <code>scope</code> 和它的 <code>parent</code> 依次向上去找的。</p>
<h2 class="anchor anchorWithStickyNavbar_dDfy" id="最后一点碎碎念">最后一点碎碎念<a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E6%9C%80%E5%90%8E%E4%B8%80%E7%82%B9%E7%A2%8E%E7%A2%8E%E5%BF%B5" class="hash-link" aria-label="最后一点碎碎念的直接链接" title="最后一点碎碎念的直接链接">​</a></h2>
<p>转眼我也到了而立之年，在这个行情下，毕业（失业）随时可能发生，当然也不敢毕业，毕竟上有老下有小，还有各种贷款。</p>
<p>技术学得越多，越觉得是个无底洞。而且掌握的东西多了，好像也没什么收益。更何况前端技术和那种 AI 技术相比，就像是过家家一样的。</p>
<p>开源呢？搞了半天也没啥产出，想成为开源明星，但自己技术水平也没到那个级别。</p>
<p>最近，我开始深入学习 <strong>云原生</strong>，因为我意识到，国内这种国情下 <strong>"技术是工具，业务才是目的"</strong>。</p>
<p>这导致我们技术人员的地位是非常低的，这点只要还在国内混就无法改变。</p>
<p>所以我们自己也不要对自己或者团队写的东西，搞得有多好多完美的似的。够用就行，多尝试，先快速搞他个 100 个应用，然后挑没死的去进行进一步的开发。</p>
<p>举个例子，现在让我从 0 到 1 搭建一个完整的业务系统，我可以全程自主搞定：</p>
<ul>
<li><strong>前端</strong>：<code>Vue</code> / <code>React</code></li>
<li><strong>后端</strong>：<code>Node.js</code>（任意框架）</li>
<li><strong>数据库</strong>：<code>MongoDB</code> / <code>PostgreSQL</code></li>
<li><strong>运维</strong>：<code>Docker</code> / <code>Serverless</code></li>
</ul>
<p>但问题是——<strong>开发成本和时间成本太高了！</strong></p>
<p>这种情况，我要自己去设计数据库，写 <code>openapi.yml</code> ，然后实现接口，还要自己写前端，和自己对接。写的差不多了还要测试，又是一堆 <code>bug</code>。</p>
<p>而且还可能遇到技术难点，之前我在 <code>Node.js</code> 中实现 <code>PostgreSQL</code> 的 <code>GraphQL</code> 方案，就折腾了好久。这种情况，为什么不直接上 <code>pg_graphql</code> 这种成熟的中间件呢？</p>
<p>所以，从商业角度来看：</p>
<ol>
<li><strong>写尽可能少的代码</strong>，尽量利用成熟方案快速搭建业务。</li>
<li><strong>赚钱才是第一要务</strong>，哪里有问题，先堆机器解决，实在搞不定了，再招专业人才处理。</li>
<li><strong>多利用AI来降本增效</strong>，AI 成本比人低，所以招个高级，不如招个初级的，会用 AI 的，学习能力好的程序员，毕竟前端静态页面，AI 生成可快了</li>
</ol>
<p>所以，从一个程序员的视角出发:</p>
<p><strong>这是最好的时代，也是最坏的时代。</strong></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_dDfy" id="参考链接"><strong>参考链接</strong><a href="https://tw.icebreaker.top/weapp-tailwindcss/blog/2025/3/v4-release#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5" class="hash-link" aria-label="参考链接的直接链接" title="参考链接的直接链接">​</a></h2>
<ul>
<li><a href="https://tw.icebreaker.top/docs/migrations/v3" target="_blank" rel="noopener noreferrer">weapp-tailwindcss 迁移文档</a></li>
<li><a href="https://tw.icebreaker.top/docs/quick-start/v4" target="_blank" rel="noopener noreferrer">Tailwindcss@4 各个框架集成方式</a></li>
<li><a href="https://tailwindcss.com/docs/upgrade-guide" target="_blank" rel="noopener noreferrer">Tailwindcss@4 升级指南</a></li>
<li><a href="https://github.com/icebreaker-template/uni-app-tailwindcss-v4" target="_blank" rel="noopener noreferrer">uni-app-tailwindcss-v4 参考模板</a></li>
</ul>]]></content:encoded>
        </item>
    </channel>
</rss>