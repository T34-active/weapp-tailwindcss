// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/631 1`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
:root, :host {
  --color-blue-500: oklch(62.3% .214 259.815);
  --spacing: .25rem;
}
*,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.size-12 {
  width: calc(var(--spacing) * 12);
  height: calc(var(--spacing) * 12);
}
.bg-blue-500\\/30 {
  background-color: color-mix(in srgb, oklch(62.3% .214 259.815) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
  }
}"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/631 2`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
page,:host {
  --color-blue-500: rgb(50, 128, 255);
  --spacing: .25rem;
}
@supports (color: color(display-p3 0 0 0%)) {
page,:host {
  --color-blue-500: rgb(50, 128, 255);
}

@media (color-gamut: p3) {
page,:host {
  --color-blue-500: color(display-p3 0.26642 0.49122 0.98862);
}
}
}
view,text,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.size-12 {
  width: calc(var(--spacing) * 12);
  height: calc(var(--spacing) * 12);
}
.bg-blue-500s30 {
  background-color: rgba(50, 128, 255, 0.3);
}
@media (color-gamut: p3) {
.bg-blue-500s30 {
  background-color: color(display-p3 0.26642 0.49122 0.98862 / 0.3);
}
}"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/632 1`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
:root, :host {
  --color-blue-100: oklch(93.2% .032 255.585);
}
*,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.hover\\:border-blue-100\\/20 {
  &:hover {
    @media (hover: hover) {
      border-color: color-mix(in srgb, oklch(93.2% .032 255.585) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-100) 20%, transparent);
      }
    }
  }
}"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/632 2`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
page,:host {
  --color-blue-100: rgb(219, 234, 254);
}
view,text,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.hovercborder-blue-100s20:hover {
      border-color: rgba(219, 234, 254, 0.2);
  }"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/638 1`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
:root, :host {
  --color-green-300: oklch(87.1% .15 154.449);
  --color-gray-600: oklch(44.6% .03 256.802);
}
*,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.dark\\:hover\\:border-green-300 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-green-300);
      }
    }
  }
}
.dark\\:hover\\:bg-gray-600 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-600);
      }
    }
  }
}"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/638 2`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
page,:host {
  --color-green-300: rgb(123, 241, 168);
  --color-gray-600: rgb(74, 85, 101);
}
view,text,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
@media (prefers-color-scheme: dark) {
    .darkchovercborder-green-300:hover {
        border-color: var(--color-green-300);
    }
  }
@media (prefers-color-scheme: dark) {
    .darkchovercbg-gray-600:hover {
        background-color: var(--color-gray-600);
    }
  }"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/638 case 0 1`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
:root, :host {
  --color-green-300: oklch(87.1% .15 154.449);
  --color-zinc-50: oklch(98.5% 0 0);
  --color-zinc-900: oklch(21% .006 285.885);
  --spacing: .25rem;
}
*,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.flex {
  display: flex;
}
.min-h-screen {
  min-height: 100vh;
}
.flex-col {
  flex-direction: column;
}
.bg-zinc-50 {
  background-color: var(--color-zinc-50);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.dark\\:bg-zinc-900 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-zinc-900);
  }
}
.dark\\:hover\\:bg-green-300 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-300);
      }
    }
  }
}"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/638 case 0 2`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
page,:host {
  --color-green-300: rgb(123, 241, 168);
  --color-zinc-50: rgb(250, 250, 250);
  --color-zinc-900: rgb(24, 24, 27);
  --spacing: .25rem;
}
view,text,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.flex {
  display: flex;
}
.min-h-screen {
  min-height: 100vh;
}
.flex-col {
  flex-direction: column;
}
.bg-zinc-50 {
  background-color: var(--color-zinc-50);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
@media (prefers-color-scheme: dark) {
.darkcbg-zinc-900 {
    background-color: var(--color-zinc-900);
}
  }
@media (prefers-color-scheme: dark) {
    .darkchovercbg-green-300:hover {
        background-color: var(--color-green-300);
    }
  }"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/643 1`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
:root, :host {
  --color-cyan-500: oklch(71.5% .143 215.221);
  --color-blue-500: oklch(62.3% .214 259.815);
  --spacing: .25rem;
}
*,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.h-14 {
  height: calc(var(--spacing) * 14);
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-cyan-500 {
  --tw-gradient-from: var(--color-cyan-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-500 {
  --tw-gradient-to: var(--color-blue-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
    }
  }
}"
`;

exports[`issues > https://github.com/sonofmagic/weapp-tailwindcss/issues/643 2`] = `
"/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
::before,::after {
      --tw-content: "";
}
view,text,::before,::after,::backdrop {
      --tw-gradient-position: initial;
      --tw-gradient-from: rgba(0,0,0,0);
      --tw-gradient-via: rgba(0,0,0,0);
      --tw-gradient-to: rgba(0,0,0,0);
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
    }
page,:host {
  --color-cyan-500: rgb(0, 182, 212);
  --color-blue-500: rgb(50, 128, 255);
  --spacing: .25rem;
}
@supports (color: color(display-p3 0 0 0%)) {
page,:host {
  --color-cyan-500: rgb(0, 182, 212);
  --color-blue-500: rgb(50, 128, 255);
}

@media (color-gamut: p3) {
page,:host {
  --color-cyan-500: color(display-p3 0.2467 0.71003 0.84144);
  --color-blue-500: color(display-p3 0.26642 0.49122 0.98862);
}
}
}
view,text,:after,:before,::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
.h-14 {
  height: calc(var(--spacing) * 14);
}
.bg-gradient-to-r {
  --tw-gradient-position: to right ;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-cyan-500 {
  --tw-gradient-from: var(--color-cyan-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-blue-500 {
  --tw-gradient-to: var(--color-blue-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}"
`;
